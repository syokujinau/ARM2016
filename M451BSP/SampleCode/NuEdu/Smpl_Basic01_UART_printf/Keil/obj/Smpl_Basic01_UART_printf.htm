<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\obj\Smpl_Basic01_UART_printf.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\obj\Smpl_Basic01_UART_printf.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 4.1 [Build 894]: Last Updated: Wed Nov 23 18:31:33 2016
<BR><P>
<H3>Maximum Stack Usage =        144 bytes + Unknown(Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
Hard_Fault_Handler &rArr; stackDump &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[7d]">printInteger</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[7b]">printf_UART</a><BR>
 <LI><a href="#[7c]">printHex</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[7b]">printf_UART</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[38]">ACMP01_IRQHandler</a> from startup_m451series.o(.text) referenced from startup_m451series.o(RESET)
 <LI><a href="#[36]">ADC00_IRQHandler</a> from startup_m451series.o(.text) referenced from startup_m451series.o(RESET)
 <LI><a href="#[37]">ADC01_IRQHandler</a> from startup_m451series.o(.text) referenced from startup_m451series.o(RESET)
 <LI><a href="#[39]">ADC02_IRQHandler</a> from startup_m451series.o(.text) referenced from startup_m451series.o(RESET)
 <LI><a href="#[3a]">ADC03_IRQHandler</a> from startup_m451series.o(.text) referenced from startup_m451series.o(RESET)
 <LI><a href="#[c]">BOD_IRQHandler</a> from startup_m451series.o(.text) referenced from startup_m451series.o(RESET)
 <LI><a href="#[24]">BRAKE0_IRQHandler</a> from startup_m451series.o(.text) referenced from startup_m451series.o(RESET)
 <LI><a href="#[28]">BRAKE1_IRQHandler</a> from startup_m451series.o(.text) referenced from startup_m451series.o(RESET)
 <LI><a href="#[6]">BusFault_Handler</a> from startup_m451series.o(.text) referenced from startup_m451series.o(RESET)
 <LI><a href="#[41]">CAN0_IRQHandler</a> from startup_m451series.o(.text) referenced from startup_m451series.o(RESET)
 <LI><a href="#[10]">CLKFAIL_IRQHandler</a> from startup_m451series.o(.text) referenced from startup_m451series.o(RESET)
 <LI><a href="#[35]">DAC_IRQHandler</a> from startup_m451series.o(.text) referenced from startup_m451series.o(RESET)
 <LI><a href="#[9]">DebugMon_Handler</a> from startup_m451series.o(.text) referenced from startup_m451series.o(RESET)
 <LI><a href="#[11]">Default_Handler</a> from startup_m451series.o(.text) referenced 9 times from startup_m451series.o(RESET)
 <LI><a href="#[16]">EINT0_IRQHandler</a> from startup_m451series.o(.text) referenced from startup_m451series.o(RESET)
 <LI><a href="#[17]">EINT1_IRQHandler</a> from startup_m451series.o(.text) referenced from startup_m451series.o(RESET)
 <LI><a href="#[18]">EINT2_IRQHandler</a> from startup_m451series.o(.text) referenced from startup_m451series.o(RESET)
 <LI><a href="#[19]">EINT3_IRQHandler</a> from startup_m451series.o(.text) referenced from startup_m451series.o(RESET)
 <LI><a href="#[1a]">EINT4_IRQHandler</a> from startup_m451series.o(.text) referenced from startup_m451series.o(RESET)
 <LI><a href="#[1b]">EINT5_IRQHandler</a> from startup_m451series.o(.text) referenced from startup_m451series.o(RESET)
 <LI><a href="#[1c]">GPA_IRQHandler</a> from startup_m451series.o(.text) referenced from startup_m451series.o(RESET)
 <LI><a href="#[1d]">GPB_IRQHandler</a> from startup_m451series.o(.text) referenced from startup_m451series.o(RESET)
 <LI><a href="#[1e]">GPC_IRQHandler</a> from startup_m451series.o(.text) referenced from startup_m451series.o(RESET)
 <LI><a href="#[1f]">GPD_IRQHandler</a> from startup_m451series.o(.text) referenced from startup_m451series.o(RESET)
 <LI><a href="#[20]">GPE_IRQHandler</a> from startup_m451series.o(.text) referenced from startup_m451series.o(RESET)
 <LI><a href="#[21]">GPF_IRQHandler</a> from startup_m451series.o(.text) referenced from startup_m451series.o(RESET)
 <LI><a href="#[4]">HardFault_Handler</a> from retarget.o(.emb_text) referenced from startup_m451series.o(RESET)
 <LI><a href="#[44]">Hard_Fault_Handler</a> from retarget.o(i.Hard_Fault_Handler) referenced from retarget.o(.emb_text)
 <LI><a href="#[32]">I2C0_IRQHandler</a> from startup_m451series.o(.text) referenced from startup_m451series.o(RESET)
 <LI><a href="#[33]">I2C1_IRQHandler</a> from startup_m451series.o(.text) referenced from startup_m451series.o(RESET)
 <LI><a href="#[d]">IRC_IRQHandler</a> from startup_m451series.o(.text) referenced from startup_m451series.o(RESET)
 <LI><a href="#[5]">MemManage_Handler</a> from startup_m451series.o(.text) referenced from startup_m451series.o(RESET)
 <LI><a href="#[3]">NMI_Handler</a> from startup_m451series.o(.text) referenced from startup_m451series.o(RESET)
 <LI><a href="#[34]">PDMA_IRQHandler</a> from startup_m451series.o(.text) referenced from startup_m451series.o(RESET)
 <LI><a href="#[25]">PWM0P0_IRQHandler</a> from startup_m451series.o(.text) referenced from startup_m451series.o(RESET)
 <LI><a href="#[26]">PWM0P1_IRQHandler</a> from startup_m451series.o(.text) referenced from startup_m451series.o(RESET)
 <LI><a href="#[27]">PWM0P2_IRQHandler</a> from startup_m451series.o(.text) referenced from startup_m451series.o(RESET)
 <LI><a href="#[29]">PWM1P0_IRQHandler</a> from startup_m451series.o(.text) referenced from startup_m451series.o(RESET)
 <LI><a href="#[2a]">PWM1P1_IRQHandler</a> from startup_m451series.o(.text) referenced from startup_m451series.o(RESET)
 <LI><a href="#[2b]">PWM1P2_IRQHandler</a> from startup_m451series.o(.text) referenced from startup_m451series.o(RESET)
 <LI><a href="#[e]">PWRWU_IRQHandler</a> from startup_m451series.o(.text) referenced from startup_m451series.o(RESET)
 <LI><a href="#[a]">PendSV_Handler</a> from startup_m451series.o(.text) referenced from startup_m451series.o(RESET)
 <LI><a href="#[f]">RAMPE_IRQHandler</a> from startup_m451series.o(.text) referenced from startup_m451series.o(RESET)
 <LI><a href="#[12]">RTC_IRQHandler</a> from startup_m451series.o(.text) referenced from startup_m451series.o(RESET)
 <LI><a href="#[49]">Reset_Handler</a> from startup_m451series.o(.text) referenced from startup_m451series.o(RESET)
 <LI><a href="#[42]">SC0_IRQHandler</a> from startup_m451series.o(.text) referenced from startup_m451series.o(RESET)
 <LI><a href="#[22]">SPI0_IRQHandler</a> from startup_m451series.o(.text) referenced from startup_m451series.o(RESET)
 <LI><a href="#[23]">SPI1_IRQHandler</a> from startup_m451series.o(.text) referenced from startup_m451series.o(RESET)
 <LI><a href="#[3d]">SPI2_IRQHandler</a> from startup_m451series.o(.text) referenced from startup_m451series.o(RESET)
 <LI><a href="#[8]">SVC_Handler</a> from startup_m451series.o(.text) referenced from startup_m451series.o(RESET)
 <LI><a href="#[b]">SysTick_Handler</a> from startup_m451series.o(.text) referenced from startup_m451series.o(RESET)
 <LI><a href="#[45]">SystemInit</a> from system_m451series.o(i.SystemInit) referenced from startup_m451series.o(.text)
 <LI><a href="#[13]">TAMPER_IRQHandler</a> from startup_m451series.o(.text) referenced from startup_m451series.o(RESET)
 <LI><a href="#[43]">TK_IRQHandler</a> from startup_m451series.o(.text) referenced from startup_m451series.o(RESET)
 <LI><a href="#[2c]">TMR0_IRQHandler</a> from startup_m451series.o(.text) referenced from startup_m451series.o(RESET)
 <LI><a href="#[2d]">TMR1_IRQHandler</a> from startup_m451series.o(.text) referenced from startup_m451series.o(RESET)
 <LI><a href="#[2e]">TMR2_IRQHandler</a> from startup_m451series.o(.text) referenced from startup_m451series.o(RESET)
 <LI><a href="#[2f]">TMR3_IRQHandler</a> from startup_m451series.o(.text) referenced from startup_m451series.o(RESET)
 <LI><a href="#[30]">UART0_IRQHandler</a> from startup_m451series.o(.text) referenced from startup_m451series.o(RESET)
 <LI><a href="#[31]">UART1_IRQHandler</a> from startup_m451series.o(.text) referenced from startup_m451series.o(RESET)
 <LI><a href="#[3b]">UART2_IRQHandler</a> from startup_m451series.o(.text) referenced from startup_m451series.o(RESET)
 <LI><a href="#[3c]">UART3_IRQHandler</a> from startup_m451series.o(.text) referenced from startup_m451series.o(RESET)
 <LI><a href="#[3e]">USBD_IRQHandler</a> from startup_m451series.o(.text) referenced from startup_m451series.o(RESET)
 <LI><a href="#[3f]">USBH_IRQHandler</a> from startup_m451series.o(.text) referenced from startup_m451series.o(RESET)
 <LI><a href="#[40]">USBOTG_IRQHandler</a> from startup_m451series.o(.text) referenced from startup_m451series.o(RESET)
 <LI><a href="#[7]">UsageFault_Handler</a> from startup_m451series.o(.text) referenced from startup_m451series.o(RESET)
 <LI><a href="#[14]">WDT_IRQHandler</a> from startup_m451series.o(.text) referenced from startup_m451series.o(RESET)
 <LI><a href="#[15]">WWDT_IRQHandler</a> from startup_m451series.o(.text) referenced from startup_m451series.o(RESET)
 <LI><a href="#[4a]">__main</a> from __main.o(!!!main) referenced from startup_m451series.o(.text)
 <LI><a href="#[48]">_printf_input_char</a> from _printf_char_common.o(.text) referenced from _printf_char_common.o(.text)
 <LI><a href="#[47]">fputc</a> from retarget.o(i.fputc) referenced from _printf_char_file.o(.text)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[4a]"></a>__main</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, __main.o(!!!main))
<BR><BR>[Calls]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
</UL>

<P><STRONG><a name="[4c]"></a>__scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter))
<BR><BR>[Called By]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
</UL>

<P><STRONG><a name="[4e]"></a>__scatterload_rt2</STRONG> (Thumb, 44 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
</UL>

<P><STRONG><a name="[ae]"></a>__scatterload_rt2_thumb_only</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)

<P><STRONG><a name="[af]"></a>__scatterload_null</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)

<P><STRONG><a name="[b0]"></a>__scatterload_copy</STRONG> (Thumb, 26 bytes, Stack size unknown bytes, __scatter_copy.o(!!handler_copy), UNUSED)

<P><STRONG><a name="[b1]"></a>__scatterload_zeroinit</STRONG> (Thumb, 28 bytes, Stack size unknown bytes, __scatter_zi.o(!!handler_zi), UNUSED)

<P><STRONG><a name="[4f]"></a>_printf_d</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_d.o(.ARM.Collect$$_printf_percent$$00000009))
<BR><BR>[Stack]<UL><LI>Max Depth = 56 + Unknown Stack Size
<LI>Call Chain = _printf_d &rArr; _printf_int_dec &rArr; _printf_int_common
</UL>
<BR>[Calls]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_dec
</UL>

<P><STRONG><a name="[64]"></a>_printf_percent</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__printf
</UL>

<P><STRONG><a name="[51]"></a>_printf_x</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_x.o(.ARM.Collect$$_printf_percent$$0000000C))
<BR><BR>[Stack]<UL><LI>Max Depth = 48 + Unknown Stack Size
<LI>Call Chain = _printf_x &rArr; _printf_int_hex &rArr; _printf_int_common
</UL>
<BR>[Calls]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_hex
</UL>

<P><STRONG><a name="[b2]"></a>_printf_percent_end</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_percent_end.o(.ARM.Collect$$_printf_percent$$00000017))

<P><STRONG><a name="[53]"></a>__rt_lib_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit.o(.ARM.Collect$$libinit$$00000000))
<BR><BR>[Calls]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_init
</UL>
<BR>[Called By]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_li
</UL>

<P><STRONG><a name="[b3]"></a>__rt_lib_init_alloca_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002A))

<P><STRONG><a name="[b4]"></a>__rt_lib_init_argv_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000028))

<P><STRONG><a name="[b5]"></a>__rt_lib_init_atexit_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000017))

<P><STRONG><a name="[b6]"></a>__rt_lib_init_clock_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001D))

<P><STRONG><a name="[b7]"></a>__rt_lib_init_cpp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002E))

<P><STRONG><a name="[b8]"></a>__rt_lib_init_exceptions_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002C))

<P><STRONG><a name="[b9]"></a>__rt_lib_init_fp_trap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001B))

<P><STRONG><a name="[ba]"></a>__rt_lib_init_getenv_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001F))

<P><STRONG><a name="[bb]"></a>__rt_lib_init_heap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000006))

<P><STRONG><a name="[bc]"></a>__rt_lib_init_lc_collate_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000D))

<P><STRONG><a name="[bd]"></a>__rt_lib_init_lc_ctype_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000F))

<P><STRONG><a name="[be]"></a>__rt_lib_init_lc_monetary_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000011))

<P><STRONG><a name="[bf]"></a>__rt_lib_init_lc_numeric_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000013))

<P><STRONG><a name="[c0]"></a>__rt_lib_init_lc_time_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000015))

<P><STRONG><a name="[c1]"></a>__rt_lib_init_rand_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000A))

<P><STRONG><a name="[c2]"></a>__rt_lib_init_return</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002F))

<P><STRONG><a name="[c3]"></a>__rt_lib_init_signal_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000019))

<P><STRONG><a name="[c4]"></a>__rt_lib_init_stdio_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000021))

<P><STRONG><a name="[c5]"></a>__rt_lib_init_user_alloc_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000008))

<P><STRONG><a name="[5c]"></a>__rt_lib_shutdown</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown.o(.ARM.Collect$$libshutdown$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit_ls
</UL>

<P><STRONG><a name="[c6]"></a>__rt_lib_shutdown_fp_trap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000006))

<P><STRONG><a name="[c7]"></a>__rt_lib_shutdown_heap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000E))

<P><STRONG><a name="[c8]"></a>__rt_lib_shutdown_return</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F))

<P><STRONG><a name="[c9]"></a>__rt_lib_shutdown_signal_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000009))

<P><STRONG><a name="[ca]"></a>__rt_lib_shutdown_stdio_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000003))

<P><STRONG><a name="[cb]"></a>__rt_lib_shutdown_user_alloc_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000B))

<P><STRONG><a name="[4d]"></a>__rt_entry</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtentry.o(.ARM.Collect$$rtentry$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_rt2
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
</UL>

<P><STRONG><a name="[cc]"></a>__rt_entry_presh_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtentry2.o(.ARM.Collect$$rtentry$$00000002))

<P><STRONG><a name="[55]"></a>__rt_entry_sh</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtentry4.o(.ARM.Collect$$rtentry$$00000004))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = __rt_entry_sh &rArr; __user_setup_stackheap
</UL>
<BR>[Calls]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[57]"></a>__rt_entry_li</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtentry2.o(.ARM.Collect$$rtentry$$0000000A))
<BR><BR>[Calls]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init
</UL>

<P><STRONG><a name="[cd]"></a>__rt_entry_postsh_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtentry2.o(.ARM.Collect$$rtentry$$00000009))

<P><STRONG><a name="[58]"></a>__rt_entry_main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtentry2.o(.ARM.Collect$$rtentry$$0000000D))
<BR><BR>[Stack]<UL><LI>Max Depth = 136 + Unknown Stack Size
<LI>Call Chain = __rt_entry_main &rArr; main &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[ce]"></a>__rt_entry_postli_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtentry2.o(.ARM.Collect$$rtentry$$0000000C))

<P><STRONG><a name="[68]"></a>__rt_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit.o(.ARM.Collect$$rtexit$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
</UL>

<P><STRONG><a name="[5b]"></a>__rt_exit_ls</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000003))
<BR><BR>[Calls]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_shutdown
</UL>

<P><STRONG><a name="[cf]"></a>__rt_exit_prels_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000002))

<P><STRONG><a name="[5d]"></a>__rt_exit_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sys_exit
</UL>

<P><STRONG><a name="[4]"></a>HardFault_Handler</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, retarget.o(.emb_text))
<BR>[Address Reference Count : 1]<UL><LI> startup_m451series.o(RESET)
</UL>
<P><STRONG><a name="[49]"></a>Reset_Handler</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, startup_m451series.o(.text))

<P><STRONG><a name="[3]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_m451series.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_m451series.o(RESET)
</UL>
<P><STRONG><a name="[5]"></a>MemManage_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_m451series.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_m451series.o(RESET)
</UL>
<P><STRONG><a name="[6]"></a>BusFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_m451series.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_m451series.o(RESET)
</UL>
<P><STRONG><a name="[7]"></a>UsageFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_m451series.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_m451series.o(RESET)
</UL>
<P><STRONG><a name="[8]"></a>SVC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_m451series.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_m451series.o(RESET)
</UL>
<P><STRONG><a name="[9]"></a>DebugMon_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_m451series.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_m451series.o(RESET)
</UL>
<P><STRONG><a name="[a]"></a>PendSV_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_m451series.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_m451series.o(RESET)
</UL>
<P><STRONG><a name="[b]"></a>SysTick_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_m451series.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_m451series.o(RESET)
</UL>
<P><STRONG><a name="[38]"></a>ACMP01_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_m451series.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_m451series.o(RESET)
</UL>
<P><STRONG><a name="[36]"></a>ADC00_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_m451series.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_m451series.o(RESET)
</UL>
<P><STRONG><a name="[37]"></a>ADC01_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_m451series.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_m451series.o(RESET)
</UL>
<P><STRONG><a name="[39]"></a>ADC02_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_m451series.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_m451series.o(RESET)
</UL>
<P><STRONG><a name="[3a]"></a>ADC03_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_m451series.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_m451series.o(RESET)
</UL>
<P><STRONG><a name="[c]"></a>BOD_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_m451series.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_m451series.o(RESET)
</UL>
<P><STRONG><a name="[24]"></a>BRAKE0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_m451series.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_m451series.o(RESET)
</UL>
<P><STRONG><a name="[28]"></a>BRAKE1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_m451series.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_m451series.o(RESET)
</UL>
<P><STRONG><a name="[41]"></a>CAN0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_m451series.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_m451series.o(RESET)
</UL>
<P><STRONG><a name="[10]"></a>CLKFAIL_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_m451series.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_m451series.o(RESET)
</UL>
<P><STRONG><a name="[35]"></a>DAC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_m451series.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_m451series.o(RESET)
</UL>
<P><STRONG><a name="[16]"></a>EINT0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_m451series.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_m451series.o(RESET)
</UL>
<P><STRONG><a name="[17]"></a>EINT1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_m451series.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_m451series.o(RESET)
</UL>
<P><STRONG><a name="[18]"></a>EINT2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_m451series.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_m451series.o(RESET)
</UL>
<P><STRONG><a name="[19]"></a>EINT3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_m451series.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_m451series.o(RESET)
</UL>
<P><STRONG><a name="[1a]"></a>EINT4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_m451series.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_m451series.o(RESET)
</UL>
<P><STRONG><a name="[1b]"></a>EINT5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_m451series.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_m451series.o(RESET)
</UL>
<P><STRONG><a name="[1c]"></a>GPA_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_m451series.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_m451series.o(RESET)
</UL>
<P><STRONG><a name="[1d]"></a>GPB_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_m451series.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_m451series.o(RESET)
</UL>
<P><STRONG><a name="[1e]"></a>GPC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_m451series.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_m451series.o(RESET)
</UL>
<P><STRONG><a name="[1f]"></a>GPD_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_m451series.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_m451series.o(RESET)
</UL>
<P><STRONG><a name="[20]"></a>GPE_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_m451series.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_m451series.o(RESET)
</UL>
<P><STRONG><a name="[21]"></a>GPF_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_m451series.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_m451series.o(RESET)
</UL>
<P><STRONG><a name="[32]"></a>I2C0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_m451series.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_m451series.o(RESET)
</UL>
<P><STRONG><a name="[33]"></a>I2C1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_m451series.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_m451series.o(RESET)
</UL>
<P><STRONG><a name="[d]"></a>IRC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_m451series.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_m451series.o(RESET)
</UL>
<P><STRONG><a name="[34]"></a>PDMA_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_m451series.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_m451series.o(RESET)
</UL>
<P><STRONG><a name="[25]"></a>PWM0P0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_m451series.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_m451series.o(RESET)
</UL>
<P><STRONG><a name="[26]"></a>PWM0P1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_m451series.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_m451series.o(RESET)
</UL>
<P><STRONG><a name="[27]"></a>PWM0P2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_m451series.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_m451series.o(RESET)
</UL>
<P><STRONG><a name="[29]"></a>PWM1P0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_m451series.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_m451series.o(RESET)
</UL>
<P><STRONG><a name="[2a]"></a>PWM1P1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_m451series.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_m451series.o(RESET)
</UL>
<P><STRONG><a name="[2b]"></a>PWM1P2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_m451series.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_m451series.o(RESET)
</UL>
<P><STRONG><a name="[e]"></a>PWRWU_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_m451series.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_m451series.o(RESET)
</UL>
<P><STRONG><a name="[f]"></a>RAMPE_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_m451series.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_m451series.o(RESET)
</UL>
<P><STRONG><a name="[12]"></a>RTC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_m451series.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_m451series.o(RESET)
</UL>
<P><STRONG><a name="[42]"></a>SC0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_m451series.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_m451series.o(RESET)
</UL>
<P><STRONG><a name="[22]"></a>SPI0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_m451series.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_m451series.o(RESET)
</UL>
<P><STRONG><a name="[23]"></a>SPI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_m451series.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_m451series.o(RESET)
</UL>
<P><STRONG><a name="[3d]"></a>SPI2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_m451series.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_m451series.o(RESET)
</UL>
<P><STRONG><a name="[13]"></a>TAMPER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_m451series.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_m451series.o(RESET)
</UL>
<P><STRONG><a name="[43]"></a>TK_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_m451series.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_m451series.o(RESET)
</UL>
<P><STRONG><a name="[2c]"></a>TMR0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_m451series.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_m451series.o(RESET)
</UL>
<P><STRONG><a name="[2d]"></a>TMR1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_m451series.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_m451series.o(RESET)
</UL>
<P><STRONG><a name="[2e]"></a>TMR2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_m451series.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_m451series.o(RESET)
</UL>
<P><STRONG><a name="[2f]"></a>TMR3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_m451series.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_m451series.o(RESET)
</UL>
<P><STRONG><a name="[30]"></a>UART0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_m451series.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_m451series.o(RESET)
</UL>
<P><STRONG><a name="[31]"></a>UART1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_m451series.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_m451series.o(RESET)
</UL>
<P><STRONG><a name="[3b]"></a>UART2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_m451series.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_m451series.o(RESET)
</UL>
<P><STRONG><a name="[3c]"></a>UART3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_m451series.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_m451series.o(RESET)
</UL>
<P><STRONG><a name="[3e]"></a>USBD_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_m451series.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_m451series.o(RESET)
</UL>
<P><STRONG><a name="[3f]"></a>USBH_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_m451series.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_m451series.o(RESET)
</UL>
<P><STRONG><a name="[40]"></a>USBOTG_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_m451series.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_m451series.o(RESET)
</UL>
<P><STRONG><a name="[14]"></a>WDT_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_m451series.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_m451series.o(RESET)
</UL>
<P><STRONG><a name="[15]"></a>WWDT_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_m451series.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_m451series.o(RESET)
</UL>
<P><STRONG><a name="[4b]"></a>__user_initial_stackheap</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, startup_m451series.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[5f]"></a>__2printf</STRONG> (Thumb, 20 bytes, Stack size 24 bytes, noretval__2printf.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 136 + Unknown Stack Size
<LI>Call Chain = __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_char_file
</UL>
<BR>[Called By]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Hard_Fault_Handler
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;stackDump
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[50]"></a>_printf_int_dec</STRONG> (Thumb, 102 bytes, Stack size 24 bytes, _printf_dec.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _printf_int_dec &rArr; _printf_int_common
</UL>
<BR>[Calls]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_common
</UL>
<BR>[Called By]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_d
</UL>

<P><STRONG><a name="[52]"></a>_printf_int_hex</STRONG> (Thumb, 88 bytes, Stack size 16 bytes, _printf_hex_int.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = _printf_int_hex &rArr; _printf_int_common
</UL>
<BR>[Calls]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_common
</UL>
<BR>[Called By]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_x
</UL>

<P><STRONG><a name="[d0]"></a>_printf_longlong_hex</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, _printf_hex_int.o(.text), UNUSED)

<P><STRONG><a name="[62]"></a>__printf</STRONG> (Thumb, 270 bytes, Stack size 32 bytes, __printf_wp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32 + Unknown Stack Size
<LI>Call Chain = __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_percent
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_is_digit
</UL>
<BR>[Called By]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_char_common
</UL>

<P><STRONG><a name="[d1]"></a>__use_two_region_memory</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[d2]"></a>__rt_heap_escrow$2region</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[d3]"></a>__rt_heap_expand$2region</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[61]"></a>_printf_int_common</STRONG> (Thumb, 184 bytes, Stack size 32 bytes, _printf_intcommon.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = _printf_int_common
</UL>
<BR>[Called By]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_hex
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_dec
</UL>

<P><STRONG><a name="[60]"></a>_printf_char_file</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, _printf_char_file.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112 + Unknown Stack Size
<LI>Call Chain = _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ferror
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_char_common
</UL>
<BR>[Called By]<UL><LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[65]"></a>_printf_char_common</STRONG> (Thumb, 32 bytes, Stack size 64 bytes, _printf_char_common.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96 + Unknown Stack Size
<LI>Call Chain = _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__printf
</UL>
<BR>[Called By]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_char_file
</UL>

<P><STRONG><a name="[56]"></a>__user_setup_stackheap</STRONG> (Thumb, 74 bytes, Stack size 8 bytes, sys_stackheap_outer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __user_setup_stackheap
</UL>
<BR>[Calls]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_initial_stackheap
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_perproc_libspace
</UL>
<BR>[Called By]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_sh
</UL>

<P><STRONG><a name="[5a]"></a>exit</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, exit.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit
</UL>
<BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_main
</UL>

<P><STRONG><a name="[d4]"></a>__user_libspace</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, libspace.o(.text), UNUSED)

<P><STRONG><a name="[67]"></a>__user_perproc_libspace</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, libspace.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[d5]"></a>__user_perthread_libspace</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, libspace.o(.text), UNUSED)

<P><STRONG><a name="[5e]"></a>_sys_exit</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, sys_exit.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit_exit
</UL>

<P><STRONG><a name="[d6]"></a>__I$use$semihosting</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, use_no_semi.o(.text), UNUSED)

<P><STRONG><a name="[d7]"></a>__use_no_semihosting_swi</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, use_no_semi.o(.text), UNUSED)

<P><STRONG><a name="[d8]"></a>__semihosting_library_function</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, indicate_semi.o(.text), UNUSED)

<P><STRONG><a name="[6a]"></a>CLK_DisablePLL</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, clk.o(i.CLK_DisablePLL))
<BR><BR>[Called By]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLK_EnablePLL
</UL>

<P><STRONG><a name="[75]"></a>CLK_EnableModuleClock</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, clk.o(i.CLK_EnableModuleClock))
<BR><BR>[Called By]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYS_Init
</UL>

<P><STRONG><a name="[69]"></a>CLK_EnablePLL</STRONG> (Thumb, 350 bytes, Stack size 44 bytes, clk.o(i.CLK_EnablePLL))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = CLK_EnablePLL
</UL>
<BR>[Calls]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLK_WaitClockReady
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLK_DisablePLL
</UL>
<BR>[Called By]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLK_SetCoreClock
</UL>

<P><STRONG><a name="[6c]"></a>CLK_SetCoreClock</STRONG> (Thumb, 134 bytes, Stack size 16 bytes, clk.o(i.CLK_SetCoreClock))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = CLK_SetCoreClock &rArr; CLK_EnablePLL
</UL>
<BR>[Calls]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLK_WaitClockReady
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLK_SetHCLK
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLK_EnablePLL
</UL>
<BR>[Called By]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYS_Init
</UL>

<P><STRONG><a name="[6d]"></a>CLK_SetHCLK</STRONG> (Thumb, 88 bytes, Stack size 24 bytes, clk.o(i.CLK_SetHCLK))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = CLK_SetHCLK &rArr; SystemCoreClockUpdate
</UL>
<BR>[Calls]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLK_WaitClockReady
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemCoreClockUpdate
</UL>
<BR>[Called By]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLK_SetCoreClock
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYS_Init
</UL>

<P><STRONG><a name="[74]"></a>CLK_SetModuleClock</STRONG> (Thumb, 74 bytes, Stack size 16 bytes, clk.o(i.CLK_SetModuleClock))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = CLK_SetModuleClock
</UL>
<BR>[Called By]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYS_Init
</UL>

<P><STRONG><a name="[6b]"></a>CLK_WaitClockReady</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, clk.o(i.CLK_WaitClockReady))
<BR><BR>[Called By]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLK_SetHCLK
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLK_SetCoreClock
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLK_EnablePLL
</UL>

<P><STRONG><a name="[71]"></a>GPIO_SetMode</STRONG> (Thumb, 44 bytes, Stack size 20 bytes, gpio.o(i.GPIO_SetMode))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = GPIO_SetMode
</UL>
<BR>[Called By]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Initial_LED
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Initial_Key_Input
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[79]"></a>Get_Key_Input</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, nuedu-basic01_button.o(i.Get_Key_Input))
<BR><BR>[Called By]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[44]"></a>Hard_Fault_Handler</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, retarget.o(i.Hard_Fault_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 144 + Unknown Stack Size
<LI>Call Chain = Hard_Fault_Handler &rArr; stackDump &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;stackDump
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> retarget.o(.emb_text)
</UL>
<P><STRONG><a name="[70]"></a>Initial_Key_Input</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, nuedu-basic01_button.o(i.Initial_Key_Input))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = Initial_Key_Input &rArr; GPIO_SetMode
</UL>
<BR>[Calls]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetMode
</UL>
<BR>[Called By]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[72]"></a>Initial_LED</STRONG> (Thumb, 84 bytes, Stack size 16 bytes, nuedu-basic01_led.o(i.Initial_LED))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = Initial_LED &rArr; GPIO_SetMode
</UL>
<BR>[Calls]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetMode
</UL>
<BR>[Called By]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[7a]"></a>LED_On</STRONG> (Thumb, 108 bytes, Stack size 8 bytes, nuedu-basic01_led.o(i.LED_On))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = LED_On
</UL>
<BR>[Called By]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[73]"></a>SYS_Init</STRONG> (Thumb, 92 bytes, Stack size 16 bytes, main.o(i.SYS_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = SYS_Init &rArr; CLK_SetCoreClock &rArr; CLK_EnablePLL
</UL>
<BR>[Calls]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLK_SetModuleClock
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLK_SetHCLK
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLK_SetCoreClock
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLK_EnableModuleClock
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemCoreClockUpdate
</UL>
<BR>[Called By]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[78]"></a>SendChar_ToUART</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, retarget.o(i.SendChar_ToUART))
<BR><BR>[Called By]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fputc
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;printf_UART
</UL>

<P><STRONG><a name="[6e]"></a>SystemCoreClockUpdate</STRONG> (Thumb, 128 bytes, Stack size 12 bytes, system_m451series.o(i.SystemCoreClockUpdate))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = SystemCoreClockUpdate
</UL>
<BR>[Called By]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLK_SetHCLK
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYS_Init
</UL>

<P><STRONG><a name="[45]"></a>SystemInit</STRONG> (Thumb, 80 bytes, Stack size 8 bytes, system_m451series.o(i.SystemInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SystemInit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_m451series.o(.text)
</UL>
<P><STRONG><a name="[76]"></a>UART_Open</STRONG> (Thumb, 130 bytes, Stack size 40 bytes, uart.o(i.UART_Open))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = UART_Open &rArr; CLK_GetPLLClockFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLK_GetPLLClockFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[63]"></a>_is_digit</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, __printf_wp.o(i._is_digit))
<BR><BR>[Called By]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__printf
</UL>

<P><STRONG><a name="[66]"></a>ferror</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, retarget.o(i.ferror))
<BR><BR>[Called By]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_char_file
</UL>

<P><STRONG><a name="[47]"></a>fputc</STRONG> (Thumb, 12 bytes, Stack size 4 bytes, retarget.o(i.fputc))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = fputc
</UL>
<BR>[Calls]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendChar_ToUART
</UL>
<BR>[Address Reference Count : 1]<UL><LI> _printf_char_file.o(.text)
</UL>
<P><STRONG><a name="[59]"></a>main</STRONG> (Thumb, 128 bytes, Stack size 0 bytes, main.o(i.main))
<BR><BR>[Stack]<UL><LI>Max Depth = 136 + Unknown Stack Size
<LI>Call Chain = main &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetMode
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Open
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LED_On
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Initial_LED
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Initial_Key_Input
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Key_Input
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;printf_UART
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYS_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_main
</UL>

<P><STRONG><a name="[7c]"></a>printHex</STRONG> (Thumb, 42 bytes, Stack size 24 bytes, main.o(i.printHex))
<BR><BR>[Stack]<UL><LI>Max Depth = 24 + In Cycle
<LI>Call Chain = printHex &rArr;  printf_UART (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;printf_UART
</UL>
<BR>[Called By]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;printf_UART
</UL>

<P><STRONG><a name="[7d]"></a>printInteger</STRONG> (Thumb, 64 bytes, Stack size 24 bytes, main.o(i.printInteger))
<BR><BR>[Stack]<UL><LI>Max Depth = 24 + In Cycle
<LI>Call Chain = printInteger &rArr;  printf_UART (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;printf_UART
</UL>
<BR>[Called By]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;printf_UART
</UL>

<P><STRONG><a name="[7b]"></a>printf_UART</STRONG> (Thumb, 80 bytes, Stack size 24 bytes, main.o(i.printf_UART))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = printf_UART &rArr; printInteger &rArr;  printf_UART (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendChar_ToUART
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;printInteger
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;printHex
</UL>
<BR>[Called By]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;printInteger
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;printHex
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[54]"></a>_fp_init</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, fpinit.o(x$fpl$fpinit))
<BR><BR>[Called By]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init
</UL>

<P><STRONG><a name="[d9]"></a>__fplib_config_fpu_vfp</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, fpinit.o(x$fpl$fpinit), UNUSED)

<P><STRONG><a name="[da]"></a>__fplib_config_pureend_doubles</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, fpinit.o(x$fpl$fpinit), UNUSED)
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[11]"></a>Default_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_m451series.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_m451series.o(RESET)
</UL>
<P><STRONG><a name="[6f]"></a>stackDump</STRONG> (Thumb, 72 bytes, Stack size 8 bytes, retarget.o(i.stackDump))
<BR><BR>[Stack]<UL><LI>Max Depth = 144 + Unknown Stack Size
<LI>Call Chain = stackDump &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Hard_Fault_Handler
</UL>

<P><STRONG><a name="[77]"></a>CLK_GetPLLClockFreq</STRONG> (Thumb, 72 bytes, Stack size 8 bytes, uart.o(i.CLK_GetPLLClockFreq))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = CLK_GetPLLClockFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Open
</UL>

<P><STRONG><a name="[48]"></a>_printf_input_char</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, _printf_char_common.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> _printf_char_common.o(.text)
</UL><P>
<H3>
Undefined Global Symbols
</H3>
<P><STRONG><a name="[a2]"></a>_handle_redirection</STRONG> (ARM, 0 bytes, Stack size 0 bytes, UNDEFINED, UNUSED)
<BR><BR>[Called By]<UL></UL>

<P><STRONG><a name="[a5]"></a>_printf_truncate_unsigned</STRONG> (ARM, 0 bytes, Stack size 0 bytes, UNDEFINED, UNUSED)
<BR><BR>[Called By]<UL></UL>
<HR></body></html>
